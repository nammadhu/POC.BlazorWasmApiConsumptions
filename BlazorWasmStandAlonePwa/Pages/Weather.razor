@page "/weather"
@inject HttpClient Http

<PageTitle>Weather</PageTitle>

<h1>Weather</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
    {
    if (!string.IsNullOrEmpty(apiResult))
        {
        <p><em>apiResult</em></p>
        }
    else
        {
        <p><em>Loading...</em></p>
        }
    }
else
    {
    <h3>Response from API</h3>
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
                {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
                }
        </tbody>
    </table>
    }

@if (!string.IsNullOrEmpty(azureFunctionResult))
    {
    <h3>Response from Azure function</h3>
    <label>@azureFunctionResult</label>
    }


@code {
    private string azureFunctionResult = "";
    private string apiResult = "";
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
        {
        try
            {
            var items = await Http.GetFromJsonAsync<WeatherForecast[]>("https://localhost:7298/WeatherForecast");
            if (items != null)
                forecasts = items;//await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");
            }
        catch (Exception e)
            {
            apiResult = "Api unable to get result info:" + e.ToString();

            }

        try
            {
        var funcUrl = "http://localhost:7253/api/Function1";
        Console.WriteLine($"Http.GetAsync :{await Http.GetAsync(funcUrl)}");//This will not print content,it just shows 200.success/failure kind of details
        azureFunctionResult = await Http.GetStringAsync(funcUrl);
            }
        catch (Exception e)
            {
            azureFunctionResult = "azureFunctionResult unable to get result info:" + e.ToString();

            }

        }

    public class WeatherForecast
        {
        public DateOnly Date { get; set; }

        public int TemperatureC { get; set; }

        public string? Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
        }
}
